#!/usr/bin/env ruby

lib = File.expand_path File.join(File.dirname(__FILE__), '../lib')
$LOAD_PATH.unshift(lib)

require 'mdocker'
require 'optparse'

mdocker_command = ARGV.size > 0 ? ARGV[0] : 'run'
begin
  case mdocker_command
    when 'inspect'
      project = MDocker::ProjectFactory.new.create
      project.inspect
    when 'clean'
      project = MDocker::ProjectFactory.new.create
      project.clean
    when 'build'
      project = MDocker::ProjectFactory.new.create
      project.build
    when 'run'
      user_command = ARGV.drop(1)
      user_command = user_command.empty? ? nil : user_command
      project = MDocker::ProjectFactory.new.create(user_command ? {command: user_command} : {})
      exit project.run
    else
      STDERR.puts "mdocker: unknown command '#{mdocker_command}'"
      exit 1
  end
  exit 0
rescue SystemExit
  raise
rescue Exception => e
  STDERR.puts 'mdocker: ' + e.message
  puts e.backtrace
  exit 1
end